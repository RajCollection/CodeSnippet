//nodeJS, MQTT, Websocket

//websocket connection client(App) side

	var SERVER_URL = 'ws://130.211.95.70:8100';
    //var SERVER_URL = 'ws://192.168.1.13:8100';
    var ws;

    function connect() {
      //alert('connect');
        ws = new WebSocket(SERVER_URL, []);
        // Set the function to be called when a message is received.
        ws.onmessage = handleMessageReceived;
        // Set the function to be called when we have connected to the server.
        ws.onopen = handleConnected;
        // Set the function to be called when an error occurs.
        ws.onerror = handleError;
    }

    function handleMessageReceived(data) {
        // Simply call logMessage(), passing the received data.
        logMessage(data.data);
        if(data.data=="goooood"){
            $state.go('dailerPage');
        }else{
            alert('wrong')
        }
    }

    function handleConnected(data) {
        // Create a log message which explains what has happened and includes
        // the url we have connected too.
        var logMsg = 'Connected to server: ' + data.target.url;
        // Add the message to the log.
        logMessage(logMsg)
    }

    function handleError(err) {
        // Print the error to the console so we can debug it.
        console.log("Error: ", err);
    }

    function logMessage(msg) {
        // $apply() ensures that the elements on the page are updated
        // with the new message.
        $scope.$apply(function() {
            //Append out new message to our message log. The \n means new line.
            $scope.messageLog = $scope.messageLog + msg + "\n";
        });

    }

    connect();

//websocket connection server side
	var WebSocketServer = require("ws").Server;

	//Create a new WebSocketServer running on port 8100.
	var wss = new WebSocketServer({port:8100});

	//broadcast msg to clients
	wss.broadcast = function(msg) {
    	//mqttConnect(msg);
	};

	//connect on
	wss.on('connection', function connection(ws) {
	    // Store the remote systems IP address as "remoteIp".
	    var remoteIp = ws.upgradeReq.connection.remoteAddress;
	    // Print a log with the IP of the client that connected.
	    console.log('Connection received: ', remoteIp);
	    
	    //ws.on('message',userLogin);
	    //ws.on('message',tempData);
	    ws.on('message',wss.broadcast);
	});


//MQTT connection

	var mqtt = require('mqtt');
	//var url = "mqtt://192.168.1.70";
	var options = {
	  port: 1883,
	  clientId: 'mqtjs_' + Math.random().toString(16).substr(2, 8)
	};
	console.log("HUB is Running...");
	client = mqtt.connect({port:1883});
	//client = mqtt.connect(url,options);

	client.on('connect', function (packet) {
	  client.subscribe('serverTopic', function(){
	    client.on('message', function (topic, message) {
	      message1 = message.toString();
	      console.log(message1)

	    })

	    //client.publish("clientTopic","Hiiiiii")

	  })


	});


//database connection
	var mysql = require('mysql'); 

	var connection = mysql.createConnection({
	  host     : 'localhost',
	  user     : 'root',
	  password : '',
	  database : 'myDbName'
	});

//insert into db

	connection.query('insert into myTable(id,name) values (1,"Raj")',
	function(err, rows, fields){
	    if (err) throw err;

	});

//retrieve data from db
	connection.query("SELECT name FROM myTable where id=1", function(err, rows, fields)
    {
        if (!err) {
            rows.forEach(function(row) {
                var str = JSON.stringify(rows)
                var parsed = JSON.parse(str);
                var name = parsed[0].name;
                 
                console.log(name)
            });
        }else {
            console.log('Error while performing Query.' + err);
        } 
        
    }); 
